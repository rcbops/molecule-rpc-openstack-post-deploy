---
# openstack router unset --external-gateway  TEST-ROUTER
# ^^^ allows gateway subnet to be deleted

# Get router list
# For each router
#   openstack router unset --external-gateway router
#   openstack router remove subnet router <subnet0>...<subnetn>
#   openstack router delete router
# Get subnet list
# For each subnet
#   openstack subnet delete subnet
# Get network list
# For each network
#   openstack network delete network

################  Begin Router Data Collection  #################
- name: Get router list
  shell: |
    lxc-attach -n "{{ utility_container.stdout }}"  \
    -- bash -c '. /root/openrc ; \
    openstack router list -f value -c ID'
  register: output

- name: Set router list fact
  set_fact:
    router_list: "{{ output.stdout_lines }}"

- name: Print router list
  debug: var=router_list

- name: Get router ports
  shell: |
    lxc-attach -n "{{ utility_container.stdout }}"  \
    -- bash -c '. /root/openrc ; \
    openstack port list -f value --router "{{ item }}"'
  register: output
  with_items: "{{ router_list }}"

- name: Set routers_i fact
  set_fact:
    routers_i: "{{ routers_i |default([]) + [ {'id': item.0, 'subnets': item.1.stdout_lines} ] }}"
  with_together:
    - "{{ router_list }}"
    - "{{ output.results }}"

- name: Print routers_i
  debug: var=routers_i
  when: routers_i is defined

- name: Set routers (with regex subnet_id)
  set_fact:
    routers: "{{ routers |default([]) + [ new_item ] }}"
  vars:
    new_item: |-
      { 'id': '{{item.id}}',
        'subnets': {{ item.subnets | map('regex_replace', "^.*subnet_id='([-\w]+)'.*?$", '\1') | list }}
      }
  with_items: "{{ routers_i }}"
  when: routers_i is defined

- name: Print routers
  debug: var=routers
  when: routers is defined

#################  End Router Data Collection  ##################

####################  Begin Remove Routers  #####################
- name: Unset external-gateway on router
  shell: |
    lxc-attach -n "{{ utility_container.stdout }}"  \
    -- bash -c '. /root/openrc ; \
    openstack router unset --external-gateway "{{ item }}"'
  with_items: "{{ router_list }}"

- name: Remove subnets from routers
  shell: |
    lxc-attach -n "{{ utility_container.stdout }}"  \
    -- bash -c '. /root/openrc ; \
    openstack router remove subnet {{ item.0.id }} {{ item.1 }}'
  with_subelements:
    - "{{ routers }}"
    - subnets
  when: routers is defined
  ignore_errors: yes

- name: Delete router
  shell: |
    lxc-attach -n "{{ utility_container.stdout }}"  \
    -- bash -c '. /root/openrc ; \
    openstack router delete "{{ item }}"'
  with_list: "{{ router_list }}"
####################  End Remove Routers    #####################

####################  Begin Remove Subnets  #####################
- name: Delete subnets
  shell: |
    lxc-attach -n "{{ utility_container.stdout }}"  \
    -- bash -c '. /root/openrc ; \
    openstack subnet delete {{ item.1 }}'
  with_subelements:
    - "{{ routers }}"
    - subnets
  when: routers is defined
  ignore_errors: yes
####################  End Remove Subnets    #####################

####################  Begin Remove Networks #####################
- name: Get networks
  shell: |
    lxc-attach -n "{{ utility_container.stdout }}"  \
    -- bash -c '. /root/openrc ; \
    openstack network list -f value -c ID'
  register: output

- name: Set network list fact
  set_fact:
    network_list_output: "{{ output.stdout_lines }}"

- name: Delete networks
  shell: |
    lxc-attach -n "{{ utility_container.stdout }}"  \
    -- bash -c '. /root/openrc ; \
    openstack network delete "{{ item }}"'
  with_items: "{{ network_list_output }}"
####################  End Remove Networks   #####################
