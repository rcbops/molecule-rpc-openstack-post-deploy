---
- name: Set the rpc-openstack variables
  set_fact:
    rpc_openstack: "{{ ansible_local['rpc_openstack']['rpc_product'] }}"
  when:
    - ansible_local.rpc_openstack is defined
    - ansible_local.rpc_openstack.rpc_product is defined

- name: Set the rpc-release variable
  set_fact:
    rpc_product_release: "{{ rpc_openstack['rpc_product_release'] }}"
  when:
    - rpc_openstack is defined
    - rpc_openstack['rpc_product_release'] is defined
    - rpc_product_release is undefined or
      rpc_product_release == 'undefined'

- name: Set the rpc-release variable from environment
  set_fact:
    rpc_product_release: "{{ lookup('env', 'RPC_PRODUCT_RELEASE') }}"
  when:
    - rpc_openstack is undefined or
      rpc_openstack['rpc_product_release'] is undefined

- name: Find the proper inventory file rpc-o
  shell: find /etc/openstack_deploy -name openstack_inventory.py -print
  register: find_inventory_file
  ignore_errors: true
  when:
    - rpc_openstack is defined
  delegate_to: localhost

- name: Find the proper inventory file osp-mnaio
  shell: find /opt -name hosts -print
  register: find_inventory_file
  ignore_errors: true
  when:
    - rpc_openstack is undefined
  delegate_to: localhost

- name: Copy inventory to working file
  copy:
    src: "{{ find_inventory_file.stdout }}"
    dest: "{{ working_inventory }}"

- name: Set proper inventory file
  set_fact:
    inventory_file: "{{ working_inventory }}"

- name: Register utility_container
  shell: |
    lxc-ls -1 | grep utility | head -n 1
  register: utility_container
  when:
    - rpc_openstack is defined

- name: Set cli_host
  set_fact:
    cli_host: "{{ ansible_hostname }}"

- name: Check for pip on "{{ cli_host }}"
  command: which pip
  register: which_pip
  ignore_errors: true
  delegate_to: "{{ cli_host }}"

- name: Install pip/setuptools/wheel on "{{ cli_host }}"
  shell: |
    CURL_CMD="curl --silent --show-error --retry 5"
    OUTPUT_FILE="get-pip.py"
    ${CURL_CMD} https://bootstrap.pypa.io/get-pip.py > ${OUTPUT_FILE}  \
      || ${CURL_CMD} https://raw.githubusercontent.com/pypa/get-pip/master/get-pip.py > ${OUTPUT_FILE}
    GETPIP_OPTIONS="pip setuptools wheel"
    python ${OUTPUT_FILE} ${GETPIP_OPTIONS} \
      || python ${OUTPUT_FILE} --isolated ${GETPIP_OPTIONS}
  when:
    - which_pip is defined
    - which_pip.failed
  delegate_to: "{{ cli_host }}"

- name: Install shade on cli_host to enable os_* modules
  pip:
    name: "shade==1.28.0"
    state: present
  delegate_to: "{{ cli_host }}"
