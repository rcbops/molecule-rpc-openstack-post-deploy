---
# cli_host fact set in set_facts.yml

- name: Install packages required for RPC support
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: true
    cache_valid_time: 600
    force: true
  with_items: "{{ ops_apt_util_packages }}"
  when:
    - ansible_os_family == 'Debian'
  register: support_package_installs
  until: support_package_installs|success
  retries: 2
  delay: 10

- name: Install host packages required for RPC support
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: true
    cache_valid_time: 600
  with_items: "{{ ops_apt_host_packages }}"
  when:
    - ansible_virtualization_role == 'host'
    - ansible_os_family == 'Debian'
- name: Check for key file
  stat:
    path: /root/.ssh/rpc_support
  changed_when: false
  failed_when: false
  register: support_key_check

- name: Create support SSH key
  command: |
    ssh-keygen -f "/root/.ssh/rpc_support" -t rsa -q -N ""
  register: support_key_create
  changed_when: support_key_create.rc == 0
  failed_when: support_key_create.rc >= 1
  when: not support_key_check.stat.exists |bool

- name: Get contents of support SSH key
  slurp:
    src: "/root/.ssh/rpc_support"
  register: support_key
  when: support_key_check.stat.exists |bool or support_key_create|changed

- name: Get contents of support SSH pub key
  slurp:
    src: "/root/.ssh/rpc_support.pub"
  register: support_pub_key
  when: support_key_check.stat.exists |bool or support_key_create|changed

- name: Get fingerprint of rpc_support SSH key
  shell: |
    ssh-keygen -lf /root/.ssh/rpc_support.pub |awk '/(RSA|DSA)/ {print $2}'
  register: support_key_fingerprint
  changed_when: support_key_fingerprint.rc == 0
  failed_when: false
  when: support_key_check.stat.exists |bool or support_key_create|changed

- name: Distribute support SSH private key
  copy:
    dest: "/root/.ssh/rpc_support"
    content: "{{ support_key.content | b64decode }}"
    owner: "root"
    group: "root"
    mode: "0600"
  with_items: "{{ groups['all'] }}"
  when:
    - support_key.content |default('') |length > 64

- name: Distribute support SSH public key
  copy:
    dest: "/root/.ssh/rpc_support.pub"
    content: "{{ support_pub_key.content | b64decode }}"
    owner: "root"
    group: "root"
    mode: "0600"
  with_items: "{{ groups['all'] }}"
  when:
    - support_pub_key.content |default('') |length > 64

#### Begin os_auth setup: the following should be moved to its own file
# TODO: Implement this! Currenly, I am hand crafting the clouds.yaml file
#- name: Get openrc file
#  fetch:
#    src: /root/overcloudrc  # TODO: abstract for rpc-o (openrc)
#    dest: /root/openrc
#    flat: True
#  delegate_to: "{{ cli_host }}"
#
#- name: Register clouds.yaml
#  stat:
#    path: /root/.config/openstack/clouds.yaml
#  register: clouds_st
#- name: create clouds.yaml file
#  template:
#    src: clouds.yaml.j2
#    dest: /root/.config/openstack/clouds.yaml
#  when: not clouds_st.stat.exists
#########
# contents of working /root/.config/openstack/clouds.yaml on OSP director
#clouds:
#  default:
#    auth:
#      auth_url: http://192.168.24.13:5000/v3
#      project_name: admin
#      tenant_name: admin
#      username: admin
#      password: HTrVTxUT7sh4MjpfdbY88vttz
#      user_domain_name: Default
#      project_domain_name: Default
#    region_name: regionOne
#    interface: internal
#    identity_api_version: "3"
#### End os_auth setup

- name: Add support key to nova
  os_keypair:
    cloud: default
    state: present
    name: rpc_support
    public_key_file: "/root/.ssh/rpc_support.pub"
  when:
    - support_pub_key.content |default('') |length > 64
  delegate_to: "{{ cli_host }}"
